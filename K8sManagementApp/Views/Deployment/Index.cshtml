@{
    ViewData["Title"] = "Deployments";
}

<div class="layui-container">
    <div class="layui-row">
        <div class="layui-col-md12">
            <div class="layui-card">
                <div class="layui-card-header">Deployment List</div>
                <div class="layui-card-body">
                    <table class="layui-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Replicas</th>
                                <th>Image</th>
                                <th>Created At</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="deploymentList"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/html" id="toolbar">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="create">Create</button>
    </div>
</script>

<script>
    layui.use(['table', 'layer'], function () {
        var table = layui.table;
        var layer = layui.layer;

        table.render({
            elem: '#deploymentList',
            url: '@Url.Action("GetAllDeployments", "Deployments")',
            toolbar: '#toolbar',
            cols: [[
                { field: 'metadata.name', title: 'Name', sort: true },
                { field: 'spec.replicas', title: 'Replicas', sort: true },
                { field: 'spec.template.spec.containers[0].image', title: 'Image', sort: true },
                { field: 'metadata.creationTimestamp', title: 'Created At', sort: true },
                { fixed: 'right', title: 'Action', toolbar: '#rowActions', width: 150 }
            ]],
            page: true
        });

        table.on('toolbar(deploymentList)', function (obj) {
            switch (obj.event) {
                case 'create':
                    layer.open({
                        type: 2,
                        title: 'Create Deployment',
                        content: '@Url.Action("CreateDeployment", "Deployments")',
                        area: ['800px', '500px'],
                        end: function () {
                            table.reload('deploymentList');
                        }
                    });
                    break;
            }
        });

        table.on('tool(deploymentList)', function (obj) {
            var data = obj.data;
            var layEvent = obj.event;

            switch (layEvent) {
                case 'edit':
                    layer.open({
                        type: 2,
                        title: 'Edit Deployment',
                        content: '@Url.Action("EditDeployment", "Deployments")' + '?name=' + data.metadata.name,
                        area: ['800px', '500px'],
                        end: function () {
                            table.reload('deploymentList');
                        }
                    });
                    break;
                case 'delete':
                    layer.confirm('Are you sure you want to delete this deployment?', function (index) {
                        layer.close(index);
                        $.ajax({
                            url: '@Url.Action("DeleteDeployment", "Deployments")' + '?name=' + data.metadata.name,
                            type: 'DELETE',
                            success: function (res) {
                                if (res.success) {
                                    layer.msg('Deployment deleted successfully', { icon: 1 });
                                    table.reload('deploymentList');
                                } else {
                                    layer.msg('Error deleting deployment: ' + res.message, { icon: 2 });
                                }
                            },
                            error: function (xhr, status, error) {
                                layer.msg('Error deleting deployment: ' + error, { icon: 2 });
                            }
                        });
                    });
                    break;
            }
});
</script>